tools.namespace:

{:paths ["src/main/clojure"]
 :deps
 {org.clojure/java.classpath {:mvn/version "1.0.0"}
  org.clojure/tools.reader {:mvn/version "1.3.6"}}

 :aliases
 {:test
  {:extra-paths ["src/test/clojure"]
   :extra-deps {io.github.cognitect-labs/test-runner
                {:git/tag "v0.5.0" :git/sha "b3fd0d2"}}
   ;; :main-opts ["-m" "cognitect.test-runner" "-d" "src/test/clojure"]
   :exec-fn cognitect.test-runner.api/test
   :exec-args {:dirs ["src/test/clojure"]}}}}
   
core.async:

{:paths ["src/main/clojure"]
 :deps
 {org.clojure/tools.analyzer.jvm {:mvn/version "1.2.3"}}
 :aliases
 {:cljs-test {:extra-deps {org.clojure/clojurescript {:mvn/version "1.11.60"}}
              :extra-paths ["src/main/clojure/cljs" "src/test/cljs"]}
  :adv       {:main-opts ["-m" "cljs.main" "-v" "-co" "build/node_adv.edn" "-c"]}
  :simp      {:main-opts ["-m" "cljs.main" "-v" "-co" "build/node_simple.edn" "-c"]}

  ;; For compile test purposes
  ;; clj -T:build compile
  :build
  {:deps {io.github.clojure/tools.build {:tag "v0.8.3" :sha "0d20256"}}
   :ns-default build}

  ;; Lint the source
  ;; clj -M:lint
  :lint {:replace-deps {clj-kondo/clj-kondo {:mvn/version "2022.10.14"}}
         :main-opts ["-m" "clj-kondo.main" "--lint" "src"]}

  ;; Find outdated deps
  ;; clj -M:outdated
  :outdated {:extra-deps {com.github.liquidz/antq {:mvn/version "RELEASE"}}
             :main-opts ["-m" "antq.core"]}
  }}
  
spec.alpha -- no deps.
core.specs.alpha -- no deps

tools.reader:

{:deps {org.clojure/clojure {:mvn/version "1.10.3"}}
 :paths ["src/main/clojure"]
 :aliases
 {:cljs-test {:extra-deps  {org.clojure/clojurescript {:mvn/version "1.11.60"}}
              :extra-paths ["src/main/cljs" "src/test/cljs"]}
  :cljs-repl {:main-opts   ["-m" "cljs.main" "-v" "-co" "build/dev.edn" "-re" "node" "-r"]}
  :cljs-adv  {:main-opts   ["-m" "cljs.main" "-v" "-co" "build/adv.edn" "-c"]}
  :cljs-simp {:main-opts   ["-m" "cljs.main" "-v" "-co" "build/simp.edn" "-c"]}}}
  
  
tools.cli:


{:paths ["src/main/clojure"]
 :aliases {:test {:extra-paths ["src/test/clojure"]}
           :1.8 {:override-deps {org.clojure/clojure {:mvn/version "1.8.0"}}}
           :1.9 {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
           :1.10 {:override-deps {org.clojure/clojure {:mvn/version "1.10.1"}}}
           :master {:override-deps {org.clojure/clojure {:mvn/version "1.11.0-master-SNAPSHOT"}}}
           :runner
           {:extra-deps {com.cognitect/test-runner
                         {:git/url "https://github.com/cognitect-labs/test-runner"
                          :sha "f7ef16dc3b8332b0d77bc0274578ad5270fbfedd"}}
            ;; required to override test-runner's transitive dependency
            ;; on an older version of this project:
            :override-deps {org.clojure/tools.cli {:local/root "."}}
            :main-opts ["-m" "cognitect.test-runner"
                        "-d" "src/test/clojure"]}
           :cljs-runner
           {:extra-deps {olical/cljs-test-runner {:mvn/version "3.7.0"}}
            ;; required to override cljs-test-runner's transitive dependency
            ;; on an older version of this project:
            :override-deps {org.clojure/tools.cli {:local/root "."}}
            :main-opts ["-m" "cljs-test-runner.main"
                        "-d" "src/test/clojure"]}}}
						
tools.analyzer: no deps.edn

test.generative: no deps.edn

test.check: 

{:paths ["src/main/clojure"]
 :deps {}}
 
 
 data.priority-map
 {:paths ["src/main/clojure"]}
 
 
 data.json:
 {:paths ["src/main/clojure"]
 :deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
 
 core.cache:
 
 ;; You can run clojure.core.cache tests with: clj -A:test:runner
;; You can also specify an alias to select which version of Clojure to test
;; against: :1.8 :1.9 :1.10 :master

{:paths ["src/main/clojure"]
 :deps {org.clojure/data.priority-map {:mvn/version "1.1.0"}}
 :aliases {:1.8 {:override-deps {org.clojure/clojure {:mvn/version "1.8.0"}}}
           :1.9 {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
           :1.10 {:override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}}
           :master {:override-deps {org.clojure/clojure {:mvn/version "1.11.0-master-SNAPSHOT"}}}
           :test
           {:extra-paths ["src/test/clojure"]
            :extra-deps {org.clojure/test.check {:mvn/version "1.0.0"}
                         io.github.cognitect-labs/test-runner
                         {:git/tag "v0.4.0" :git/sha "334f2e2"}}
            :main-opts ["-m" "cognitect.test-runner"
                        "-d" "src/test/clojure"]}}}
				
core.memoize:
;; You can run clojure.core.memoize tests with: clj -A:test:runner
;; You can also specify an alias to select which version of Clojure to test
;; against: :1.6 :1.7 :1.8 :1.9 :master

{:paths ["src/main/clojure"]
 :deps {org.clojure/core.cache {:mvn/version "1.0.225"}}
 :aliases {:1.8 {:override-deps {org.clojure/clojure {:mvn/version "1.8.0"}}}
           :1.9 {:override-deps {org.clojure/clojure {:mvn/version "1.9.0"}}}
           :1.10 {:override-deps {org.clojure/clojure {:mvn/version "1.10.3"}}}
           :master {:override-deps {org.clojure/clojure {:mvn/version "1.11.0-master-SNAPSHOT"}}}
           :test
           {:extra-paths ["src/test/clojure"]
            :extra-deps {org.clojure/test.check {:mvn/version "1.0.0"}
                         io.github.cognitect-labs/test-runner
                         {:git/tag "v0.4.0" :git/sha "334f2e2"}}
            :main-opts ["-m" "cognitect.test-runner"
                        "-d" "src/test/clojure"]}}}
						
						
core.match:
{:paths ["src/main/clojure"]}

core.logic:  no deps.edn

